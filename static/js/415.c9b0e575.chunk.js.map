{"version":3,"file":"static/js/415.c9b0e575.chunk.js","mappings":"0MAEaA,EAAWC,EAAAA,GAAAA,GAAH,gZAkBRC,EAAQD,EAAAA,GAAAA,IAAH,mF,SCmBlB,EAnCqB,SAAC,GAAkB,IAAjBE,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,KAE3B,OACE,SAACJ,EAAD,WACE,UAAC,KAAD,CACEK,GAAE,kBAAaF,EAAKG,IACpBC,MAAO,CAAEC,KAAMJ,GAFjB,WAIE,SAACF,EAAD,CACEO,IACEN,EAAKO,YAAL,yCACsCP,EAAKO,aAD3C,wFAIFC,IAAKR,EAAKS,OAAST,EAAKU,kBAE1B,uBAAIV,EAAKS,OAAST,EAAKU,qBAI9B,ECtBYC,EAAOb,EAAAA,GAAAA,GAAH,8ICqBjB,EAnBiB,SAAC,GAAyB,IAAvBc,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACzB,OACE,SAACF,EAAD,UACGC,EAAME,KAAI,SAAAd,GAAI,OACb,SAAC,EAAD,CAA4BA,KAAMA,EAAMC,KAAMY,GAA3Bb,EAAKG,GADX,KAKpB,C,kHCcD,UApBa,WACX,IAAMU,GAAWE,EAAAA,EAAAA,MAEf,GAA2CC,EAAAA,EAAAA,UAAS,IAApD,eAAMC,EAAN,KAAsBC,EAAtB,KASA,OAPAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAQ,mCAAG,0FACfF,EADe,UACSG,EAAAA,EAAAA,MADT,6EAAH,qDAGdD,GACH,GAAC,KAGA,6BACE,4CACA,SAAC,IAAD,CAAUR,MAAOK,EAAgBJ,SAAUA,MAGlD,C,+LCrBKS,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMF,EAAiB,mCAAG,oGACNE,EAAAA,EAAAA,IAAA,sCAAyCD,IADnC,cACvBE,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,qDAKjBC,EAAe,mCAAG,WAAOC,GAAP,uFACNL,EAAAA,EAAAA,IAAA,gCAAmCD,EAAnC,kBAAoDM,IAD9C,cACvBJ,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,sDAKfG,EAAe,mCAAG,WAAM1B,GAAN,uFACJoB,EAAAA,EAAAA,IAAA,iBAAoBpB,EAApB,oBAAkCmB,IAD9B,cACrBE,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKfK,EAAY,mCAAG,WAAM3B,GAAN,uFACHoB,EAAAA,EAAAA,IAAA,iBAAoBpB,EAApB,4BAA0CmB,IADvC,cACpBE,EADoB,yBAEnBA,EAASC,KAAKM,MAFK,2CAAH,sDAKZC,EAAc,mCAAG,WAAM7B,GAAN,uFACLoB,EAAAA,EAAAA,IAAA,iBAAoBpB,EAApB,4BAA0CmB,IADrC,cACtBE,EADsB,yBAErBA,EAASC,KAAKC,SAFO,2CAAH,qD","sources":["components/FilmListItem/FilmListItem.styled.js","components/FilmListItem/FilmListItem.jsx","components/FilmList/FilmList.styled.js","components/FilmList/FilmList.jsx","pages/Home.jsx","services/TMDBApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  box-sizing: border-box;\n  max-width: calc(100% / 4 - 16px);\n  padding: 12px;\n  width: 100%;\n  display: block;\n  background: linear-gradient(30deg, teal, transparent);\n  border-radius: 4px;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px,\n    rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\n  > a {\n    text-decoration: none;\n    > p {\n      color: #fff;\n    }\n  }\n`;\n\nexport const Image = styled.img`\n    display: block;\n    width: 100%;\n    height: 390px;\n`","import { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { Image, ListItem } from \"./FilmListItem.styled\";\n\nconst FilmListItem = ({film, from}) => {\n\n  return (\n    <ListItem>\n      <Link\n        to={`/movies/${film.id}`}\n        state={{ back: from }}\n      >\n        <Image\n          src={\n            film.poster_path\n              ? `https://image.tmdb.org/t/p/w500${film.poster_path}`\n              : `https://skydomepictures.com/wp-content/uploads/2018/08/movie-poster-coming-soon-2.png`\n          }\n          alt={film.title || film.original_title}\n        />\n        <p>{film.title || film.original_title}</p>\n      </Link>\n    </ListItem>\n  );\n}\n\nFilmListItem.propTypes = {\n  film: PropTypes.shape({\n      poster_path: PropTypes.string,\n      title: PropTypes.string,\n      original_title: PropTypes.string,\n      id: PropTypes.number.isRequired,\n    }).isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string,\n\n  })\n}\n\nexport default FilmListItem","import styled from 'styled-components'\n\nexport const List = styled.ul`\n\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n  flex-wrap: wrap;\n  padding: 0;\n  list-style: none;\n`;","import PropTypes from 'prop-types';\nimport FilmListItem from 'components/FilmListItem/FilmListItem';\nimport { List } from './FilmList.styled';\n\nconst FimlList = ({ films, location }) => {\n  return (\n    <List>\n      {films.map(film => (\n        <FilmListItem key={film.id} film={film} from={location} />\n      ))}\n    </List>\n  );\n};\n\nFimlList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  location: PropTypes.shape({}).isRequired,\n}\n\nexport default FimlList;\n","import FimlList from \"components/FilmList/FilmList\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { getTrendingMovies } from \"services/TMDBApi\"\n\n\nconst Home = () => {\n  const location = useLocation();\n\n    const[trendingMovies, setTrendingMovies] = useState([]);\n\n    useEffect(()=>{\n        const getFilms = async () => {\n          setTrendingMovies(await getTrendingMovies());\n        };\n        getFilms();\n    },[])\n\n    return (\n      <main>\n        <h1>Trending today</h1>\n        <FimlList films={trendingMovies} location={location} />\n      </main>\n    );\n}\n\nexport default Home","import axios from 'axios'\n\n\nconst API_KEY = '5e0ca358c6a85ef9a9e43b6452e61748';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n}\n\nexport const getMovieByQuery = async (query) => {\n  const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}`);\n  return response.data.results;\n}\n\nexport const getMovieDetails = async id => {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n    return response.data;\n}\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data.cast;\n};\n\nexport const getMovieReview = async id => {\n  const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\n\n\n"],"names":["ListItem","styled","Image","film","from","to","id","state","back","src","poster_path","alt","title","original_title","List","films","location","map","useLocation","useState","trendingMovies","setTrendingMovies","useEffect","getFilms","getTrendingMovies","API_KEY","axios","response","data","results","getMovieByQuery","query","getMovieDetails","getMovieCast","cast","getMovieReview"],"sourceRoot":""}