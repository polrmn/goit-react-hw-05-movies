{"version":3,"file":"static/js/387.917f8450.chunk.js","mappings":"iQAEaA,E,OAAWC,GAAAA,GAAH,yiB,SCuCrB,EApCa,WAET,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GAWR,OATAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,uGACSC,EAAAA,EAAAA,IAAaJ,GADtB,OACRK,EADQ,OAERC,EAAWD,EAASE,MAAM,EAAG,IACnCR,EAAQO,GAHM,2CAAH,qDAKbH,GACD,GAAE,CAACH,KAGF,SAACL,EAAD,UACGG,EAAKU,KAAI,SAAAC,GAAK,OACb,2BACE,gBACEC,IACED,EAAME,aAAN,yCACkCF,EAAME,cACxC,uGAEFC,IAAKH,EAAMI,KACXC,MAAM,SAER,wBAAKL,EAAMI,QACX,uCAAeJ,EAAMM,WAAa,eAX3BN,EAAMO,QADF,KAiBtB,C,+LCpCKC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,oGACND,EAAAA,EAAAA,IAAA,sCAAyCD,IADnC,cACvBG,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,qDAKjBC,EAAe,mCAAG,WAAOC,GAAP,uFACNN,EAAAA,EAAAA,IAAA,gCAAmCD,EAAnC,kBAAoDO,IAD9C,cACvBJ,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,sDAKfG,EAAe,mCAAG,WAAMzB,GAAN,uFACJkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,oBAAkCiB,IAD9B,cACrBG,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKfjB,EAAY,mCAAG,WAAMJ,GAAN,uFACHkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,4BAA0CiB,IADvC,cACpBG,EADoB,yBAEnBA,EAASC,KAAKvB,MAFK,2CAAH,sDAKZ4B,EAAc,mCAAG,WAAM1B,GAAN,uFACLkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,4BAA0CiB,IADrC,cACtBG,EADsB,yBAErBA,EAASC,KAAKC,SAFO,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/TMDBApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  padding: 0;\n  gap: 8px;\n  flex-wrap: wrap;\n  margin: 0;\n  list-style: none;\n  \n  justify-content: space-around;\n  & > li {\n    max-width: 30%;\n    width: 100%;\n    text-align: center;\n    font-size: 20px;\n    font-weight: 500;\n    border-radius: 4px;\n    background: linear-gradient(30deg, teal, transparent);\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover {\n      transform: scale(1.05)\n    }\n    & > img {\n        max-width: 100%;\n        width: 100%\n    }\n`;","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\"\nimport { getMovieCast } from \"services/TMDBApi\";\nimport { CastList } from \"./Cast.styled\";\n\nconst Cast = () => {\n\n    const [cast, setCast] = useState([]);\n\n    const { id } = useParams();\n\n    useEffect(() => {\n      const getCast = async () => {\n        const fullCast = await getMovieCast(id);\n        const mainCast = fullCast.slice(0, 10);\n        setCast(mainCast);\n      };\n      getCast();\n    }, [id]);\n\n    return (\n      <CastList>\n        {cast.map(actor => (\n          <li key={actor.cast_id}>\n            <img\n              src={\n                actor.profile_path ?\n                `https://image.tmdb.org/t/p/w500${actor.profile_path}` :\n                'https://user-images.githubusercontent.com/24848110/33519396-7e56363c-d79d-11e7-969b-09782f5ccbab.png'\n              }\n              alt={actor.name}\n              width=\"360\"\n            />\n            <h2>{actor.name}</h2>\n            <p>Character: {actor.character || 'Unknown'}</p>\n          </li>\n        ))}\n      </CastList>\n    );\n}\n\nexport default Cast","import axios from 'axios'\n\n\nconst API_KEY = '5e0ca358c6a85ef9a9e43b6452e61748';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n}\n\nexport const getMovieByQuery = async (query) => {\n  const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}`);\n  return response.data.results;\n}\n\nexport const getMovieDetails = async id => {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n    return response.data;\n}\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data.cast;\n};\n\nexport const getMovieReview = async id => {\n  const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\n\n\n"],"names":["CastList","styled","useState","cast","setCast","id","useParams","useEffect","getCast","getMovieCast","fullCast","mainCast","slice","map","actor","src","profile_path","alt","name","width","character","cast_id","API_KEY","axios","getTrendingMovies","response","data","results","getMovieByQuery","query","getMovieDetails","getMovieReview"],"sourceRoot":""}