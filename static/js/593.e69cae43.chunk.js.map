{"version":3,"file":"static/js/593.e69cae43.chunk.js","mappings":"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","sources":["components/FilmListItem/FilmListItem.styled.js","components/FilmListItem/FilmListItem.jsx","components/FilmList/FilmList.styled.js","components/FilmList/FilmList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","services/TMDBApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  box-sizing: border-box;\n  max-width: calc(100% / 4 - 16px);\n  padding: 12px;\n  width: 100%;\n  display: block;\n  background: linear-gradient(30deg, teal, transparent);\n  border-radius: 4px;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px,\n    rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\n  > a {\n    text-decoration: none;\n    > p {\n      color: #fff;\n    }\n  }\n`;\n\nexport const Image = styled.img`\n    display: block;\n    width: 100%;\n    height: 390px;\n`","import { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { Image, ListItem } from \"./FilmListItem.styled\";\n\nconst FilmListItem = ({film, from}) => {\n\n  return (\n    <ListItem>\n      <Link\n        to={`/movies/${film.id}`}\n        state={{ back: from }}\n      >\n        <Image\n          src={\n            film.poster_path\n              ? `https://image.tmdb.org/t/p/w500${film.poster_path}`\n              : `https://skydomepictures.com/wp-content/uploads/2018/08/movie-poster-coming-soon-2.png`\n          }\n          alt={film.title || film.original_title}\n        />\n        <p>{film.title || film.original_title}</p>\n      </Link>\n    </ListItem>\n  );\n}\n\nFilmListItem.propTypes = {\n  film: PropTypes.shape({\n      poster_path: PropTypes.string,\n      title: PropTypes.string,\n      original_title: PropTypes.string,\n      id: PropTypes.number.isRequired,\n    }).isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string,\n\n  })\n}\n\nexport default FilmListItem","import styled from 'styled-components'\n\nexport const List = styled.ul`\n\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n  flex-wrap: wrap;\n  padding: 0;\n  list-style: none;\n`;","import PropTypes from 'prop-types';\nimport FilmListItem from 'components/FilmListItem/FilmListItem';\nimport { List } from './FilmList.styled';\n\nconst FimlList = ({ films, location }) => {\n  return (\n    <List>\n      {films.map(film => (\n        <FilmListItem key={film.id} film={film} from={location} />\n      ))}\n    </List>\n  );\n};\n\nFimlList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  location: PropTypes.shape({}).isRequired,\n}\n\nexport default FimlList;\n","import styled from 'styled-components';\n\nexport const Searchbar = styled.div`\n  //   top: 0;\n  //   left: 0;\n  //   position: sticky;\n  //   z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 40px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: teal;\n  box-shadow: rgba(27, 31, 35, 0.04) 0px 1px 0px,\n    rgba(255, 255, 255, 0.25) 0px 1px 0px inset;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  width: 36px;\n  height: 36px;\n  border: 0;\n  background-image: url('https://upload.wikimedia.org/wikipedia/commons/thumb/0/0b/Search_Icon.svg/1024px-Search_Icon.svg.png');\n  background-size: 60%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Searchbar, Form, SearchButton, SearchInput } from './SearchForm.styled';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = event => {\n    const { value } = event.target;\n    setQuery(value);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (query === '') {\n      return;\n    }\n    onSubmit(query)\n    setQuery('');\n  };\n\n  return (\n    <Searchbar>\n      <Form onSubmit={handleSubmit}>\n        <SearchInput type=\"text\" value={query} onChange={handleChange} />\n        <SearchButton type=\"submit\"></SearchButton>\n      </Form>\n    </Searchbar>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n}\n\nexport default SearchForm;\n","import { useEffect, useState } from \"react\"\nimport { useSearchParams } from \"react-router-dom\";\nimport { useLocation, } from \"react-router-dom\";\nimport { Notify } from \"notiflix\";\nimport FimlList from \"components/FilmList/FilmList\";\nimport SearchForm from \"components/SearchForm/SearchForm\";\nimport { getMovieByQuery } from \"services/TMDBApi\";\n\n\nconst Movies = () => {\n    const location = useLocation();\n\n    const [searchedMovies, setSearchedMovies] = useState([]);\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query') ?? '';\n    \n    useEffect(()=>{\n        const getSearchingFilms = async () => {\n          const answer = await getMovieByQuery(query);\n          console.log(answer);\n          if (answer.length === 0) {\n            Notify.failure('No results');\n            return\n          }\n          setSearchedMovies(await getMovieByQuery(query));\n        };\n        if (query !== '') {\n          getSearchingFilms();\n        }\n    },[query])\n\n    const handleFormSubmit = (query) => {\n      setSearchParams(query !== '' ? {query: query} : {})\n    }\n    return (\n      <main>\n        <SearchForm onSubmit={handleFormSubmit} />\n        {searchedMovies.length > 0 && (\n          <FimlList films={searchedMovies} location={location} />\n        )}\n      </main>\n    );\n}\n\nexport default Movies","import axios from 'axios'\n\n\nconst API_KEY = '5e0ca358c6a85ef9a9e43b6452e61748';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n}\n\nexport const getMovieByQuery = async (query) => {\n  const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}`);\n  return response.data.results;\n}\n\nexport const getMovieDetails = async id => {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n    return response.data;\n}\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data.cast;\n};\n\nexport const getMovieReview = async id => {\n  const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\n\n\n"],"names":["ListItem","styled","Image","film","from","to","id","state","back","src","poster_path","alt","title","original_title","List","films","location","map","Searchbar","Form","SearchInput","SearchButton","onSubmit","useState","query","setQuery","handleSubmit","event","preventDefault","type","value","onChange","target","useLocation","searchedMovies","setSearchedMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","getSearchingFilms","getMovieByQuery","answer","console","log","length","Notify","API_KEY","axios","getTrendingMovies","response","data","results","getMovieDetails","getMovieCast","cast","getMovieReview"],"sourceRoot":""}